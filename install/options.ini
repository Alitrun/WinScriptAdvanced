[Script] 
ActiveScripts=MinutesAgo|CheckEncoding|Signature

; List of scripts that will work together, returning their info in columns in one panel. 
; Separated by "|" - script1|script2 etc. One script can have multiple columns and display info with other
; scripts that also can be with multiple columns, all in one group of columns.
; You can add all scripts to ActiveScripts - it does not affect the performance (but takes more memory to 
; load and save script code), cause script runs only if you have the corresponding visible column in TC.  


[ExeScriptParsers]
; This section is for script engines that do not support COM interface 
; or has problems with it (no x64, unstable, buggy, stopped supporting etc). 
; Name of the key is a file extension of a script, here ahk is for AutoHotKey (*.ahk) scripts.
; Key value is the path to an exe interpretetor (parser). 
; Plugin reads script results from the console StdOut. Set correct string in StdOutFormat param (examples below). 
; To add a custom parser, you need also specify correct VarFormat key. 

; You can use enviroment variables in a path.

ahk=c:\Program Files\AutoHotkey\AutoHotkey.exe
ahkCmdArgs=
ahkVarFormat=filename=%s
ahkDoubleSlashPath=0 
ahkStdOutFormat=FileAppend, %%%s%% `n, *
; StdOutFormat - this string is a script command to write to the console StdOut. WinScriptAdv uses this command 
; to get results from a script. For ahk language "`n" means linebreak cause FileAppend in ahk do not add linebreak 
; (but most languages add linebreak while writing to console - so in such case do not add line break manually).
; Instead of %s WinscriptAdv inserts the name of result variables - content, content1 etc e.g.: "FileAppend, %content% `n, *" or 
; "echo $content;" or "ConsoleWrite ($content & @CRLF)". See examples below.
; To display the character % use the sequence %% e.g.: %%%s%% - means %content% or %content1% etc (%variable% - is ahk syntax)
; CmdArgs - parser will be launched with specified arguments. For example to start interpreter without logo or without tray icon.

php=c:\php\php.exe
phpCmdArgs=
phpVarFormat=$filename='%s';
phpDoubleSlashPath=0
phpStdOutFormat=echo $%s;

au3=c:\Program Files (x86)\AutoIt3\AutoIt3.exe
au3CmdArgs=
au3VarFormat=$filename="%s"
au3DoubleSlashPath=0
au3StdOutFormat=ConsoleWrite ($%s & @CRLF)

; This VBS interpreter is only for example, WinScriptadv uses vbs\js\python engines via COM that is much faster than this.
; You can use it in portable versions of Total commander or if WSH is broken in Windows. 
;vbs=%WINDIR%\system32\cscript.exe
;vbsCmdArgs=//nologo
;vbsVarFormat=filename="%s"
;vbsDoubleSlashPath=0
;vbsStdOutFormat=Wscript.echo %s

[CheckEncoding]
Script=CheckEncoding.vbs
; Returns Character Encoding and Line Endings for file. E.g:  ASCII - CRLF (Win)

; All scripts files must be placed in "Scripts" folder

content=Encoding\Line Endings
content1=Encoding
content2=Line Endings

; Except the name of a column, this also defines a number of columns for a current script.
; "content", "content1" etc are fixed names of result variables of the script. They will be returned 
; to the plugin, so do not change it. You can change title of each column 
; for example: "content=Column Title", "content1=New Title #2".
; "content" is the first variable name, "content1" is the second... "content20" is the last. 
; So totally there are 21 result variables\columns per script.

extensions=*

; A list of file formats (extensions) that script handles separated by "|". For optimization purpose. 
; e.g: extensions=wav|mp3|doc
; * means that plugin sends all filenames to script.

FoldersPaths=0
; 1 - plugin sends all paths of folders to a script, 0 - no folders, only files. default = 0

[Signature]
; This script returns the first 10 bytes in the file as text or hex-representation. 
; Could be usefull for example to search for files with a specified signatur 

Script=Signature.vbs
content=Signature
extensions=*
FoldersPaths=0

[DayOfWeek]
; showing day of week for the modified file date 

Script=DayOfWeek.vbs
content=Day of week
extensions=*
FoldersPaths=0

[Html_info]
; two columns retreiving html title and "saved from" info 

Script=Html_info.vbs
content=Html Title
content1=Html saved from
extensions=htm|html|shtml|xml
FoldersPaths=0

[SearchInFile]
; Searches inside of a file and looks for a value specified by regular expression 

Script=SearchInFile.vbs
content=Found Inside
extensions=*
FoldersPaths=0

[ReadFileLines]
; Get line content from current file, from pos1 till pos2 
; use this info with renaming tool or for user columns

Script=ReadFileLines.vbs
content=Line1
content1=Line2
content2=Line3
content3=Line4
extensions=*
FoldersPaths=0

[FileOwner]
; Returns the owner of a file \ folder

Script=FileOwner.vbs
content=Owner
extensions=*
FoldersPaths=1

[MinutesAgo]
; Columns Returns the difference in minutes between the current date and the date of folder\file: 

Script=MinutesAgo.vbs
content=Created
content1=Modified
content2=Accessed
extensions=*
FoldersPaths=0

[testPython]
Script=testPython.py
content=Python
extensions=*
FoldersPaths=0

[testAHK]
Script=testAHK.ahk
content=AHK Line1
content1=AHK Line2
extensions=*
FoldersPaths=0

[testPHP]
Script=testPHP.php
content=PHP Line1
content1=PHP Line2
extensions=*
FoldersPaths=0

[testAutoIt]
Script=testAutoIt.au3
content=AutoIt Line1
content1=AutoIt Line2
extensions=*
FoldersPaths=0

[testPowerShell]
Script=testPowerShell.ps1
content=PowerShell1
content1=PowerShell2
extensions=*
FoldersPaths=0
